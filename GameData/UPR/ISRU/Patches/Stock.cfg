//this removes stock and other mods ISRU recipeces from the stock ISRUs
//and replaces it with UPR ISRU receipes

//assume 2 size 4 converters 2*(4000 L)
@PART[ISRU]:FOR[zzzz_UPR]
{
	!MODULE[ModuleResourceConverter],*
	{}
	
	MODULE
	{
		name = WBIOmniConverter
		managedName = ISRUConverter 1
		templateNodes = OMNICONVERTER
		templateTags = OmniISRU
		BaseEfficiency = 4.0
		
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 150

		ConverterName = ISRUConverter 1
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1
		showOpsView = true
	}
	MODULE
	{
		name = WBIOmniConverter
		managedName = ISRUConverter 2
		templateNodes = OMNICONVERTER
		templateTags = OmniISRU
		BaseEfficiency = 4.0
		
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 150

		ConverterName = ISRUConverter 2
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1
		showOpsView = true
	}
	
}

//assume 2 size 1 converters 2*(1000 L)
@PART[MiniISRU]:FOR[zzzz_UPR]
{
	!MODULE[ModuleResourceConverter],*
	{}

	MODULE
	{
		name = WBIOmniConverter
		managedName = ISRUConverter 1
		templateNodes = OMNICONVERTER
		templateTags = OmniISRU
		BaseEfficiency = 1.0
		
		reconfigureSkill = ConverterSkill
		requiredResource = Equipment
		requiredAmount = 150

		ConverterName = ISRUConverter 1
		StartActionName = Start Converter
		StopActionName = Stop Converter
		AutoShutdown = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1
		showOpsView = true
	}
	
	// MODULE
	// {
		// name = WBIOmniConverter
		// managedName = ISRUConverter 2
		// templateNodes = OmniISRU
		// templateTags = hab
		// BaseEfficiency = 1.0
		
		// reconfigureSkill = ConverterSkill
		// requiredResource = Equipment
		// requiredAmount = 150

		// ConverterName = ISRUConverter 2
		// StartActionName = Start Converter
		// StopActionName = Stop Converter
		// AutoShutdown = false
		// UseSpecialistBonus = true
		// SpecialistEfficiencyFactor = 0.2
		// SpecialistBonusBase = 0.05
		// ExperienceEffect = ConverterSkill
		// EfficiencyBonus = 1
		// showOpsView = true
	// }
}



@PART[RadialDrill]
{
    -MODULE[ModuleResourceHarvester] {}
	
	MODULE
	{
		name = WBIModuleResourceHarvester

		//HarvesterType and ResourceName will be overriden by harvestTypes. See below.
		HarvesterType = 0 
		Efficiency = 1.5
		ResourceName = Rock

		// List of harvest types: Planetary, Oceanic, Atmospheric, Exospheric. You can have more than one harvest type. Separate the types with a semicolon.
		// This overrides HarversterType from the base class. There is a precedence based on vessel situation and supported harvest types:
		// Landed: Atmospheric before Planetary
		// Splashed: Oceanic before Planetary
		// In space: Exospheric before Atmospheric
		harvestTypes = Planetary

		AutoShutdown = true
		ConverterName = Surface Harvester
		StartActionName = Start Surface Harvester
		StopActionName = Stop Surface Harvester
		ToggleActionName = Toggle Surface Harvester
		ImpactTransform = ImpactTransform
		ImpactRange = 6
		AutoShutdown = true
		GeneratesHeat = true

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 15
		}
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		UseSpecialistHeatBonus = true
		SpecialistHeatFactor = 0.1
		ExperienceEffect = DrillSkill
		EfficiencyBonus = 1
		
		TemperatureModifier
		{
			key = 0 10000 0 0
			key = 250 7500 0 0
			key = 500 5000 0 0
			key = 750 500 0 0
			key = 1000 0 0 0
		}		

		ThermalEfficiency 
		{
			key = 0 0.1
			key = 250 .1
			key = 500 1
			key = 750 .1
			key = 1000 0
		}
		HarvestThreshold = 0.015
	
	}
}

@PART[MiniDrill]
{
    -MODULE[ModuleResourceHarvester] {}
	
	MODULE
	{
		name = WBIModuleResourceHarvester

		//HarvesterType and ResourceName will be overriden by harvestTypes. See below.
		HarvesterType = 0 
		Efficiency = 0.3
		ResourceName = Rock

		// List of harvest types: Planetary, Oceanic, Atmospheric, Exospheric. You can have more than one harvest type. Separate the types with a semicolon.
		// This overrides HarversterType from the base class. There is a precedence based on vessel situation and supported harvest types:
		// Landed: Atmospheric before Planetary
		// Splashed: Oceanic before Planetary
		// In space: Exospheric before Atmospheric
		harvestTypes = Planetary

		AutoShutdown = true
		ConverterName = Surface Harvester
		StartActionName = Start Surface Harvester
		StopActionName = Stop Surface Harvester
		ToggleActionName = Toggle Surface Harvester
		ImpactTransform = ImpactTransform
		ImpactRange = 1.5
		AutoShutdown = true
		GeneratesHeat = true

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 3
		}
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		UseSpecialistHeatBonus = true
		SpecialistHeatFactor = 0.1
		ExperienceEffect = DrillSkill
		EfficiencyBonus = 1
		
		TemperatureModifier
		{
			key = 0 10000 0 0
			key = 250 5000 0 0
			key = 500 2500 0 0
			key = 750 250 0 0
			key = 1000 0 0 0
		}		

		ThermalEfficiency 
		{
			key = 0 0.1
			key = 250 .1
			key = 500 1
			key = 750 .1
			key = 1000 0
		}
		HarvestThreshold = 0.025
	
	}
}



